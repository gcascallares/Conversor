
import java.awt.HeadlessException;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Usuario
 */
public class ConversorGenerico extends javax.swing.JFrame {

    /**
     * Creates new form Conversor
     */
    public ConversorGenerico() {
        initComponents();
        
        setLocationRelativeTo(null);
        
        setTitle("Conversor");
        
        setResizable(false);
        
        conversores.add(new ConversorCentPulg());
        conversores.add(new ConversorMetroKm());
        conversores.add(new ConversorCentCubicLitro());
        conversores.add(new ConversorKmMilla());
        conversores.add(new ConversorMbGb());
        
        for (Conversor conversor : conversores) {
            ComboBoxConversores.addItem(conversor.getTipo());
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Label1 = new javax.swing.JLabel();
        Label2 = new javax.swing.JLabel();
        FieldLabel2 = new javax.swing.JTextField();
        FieldLabel1 = new javax.swing.JTextField();
        ButtonConvertir = new javax.swing.JButton();
        ComboBoxConversores = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Label1.setText("Label1");

        Label2.setText("Label2");

        FieldLabel2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                FieldLabel2FocusLost(evt);
            }
        });
        FieldLabel2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FieldLabel2KeyPressed(evt);
            }
        });

        FieldLabel1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                FieldLabel1FocusLost(evt);
            }
        });
        FieldLabel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                FieldLabel1KeyPressed(evt);
            }
        });

        ButtonConvertir.setText("Convertir");
        ButtonConvertir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonConvertirActionPerformed(evt);
            }
        });

        ComboBoxConversores.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxConversoresItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBoxConversores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Label2, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(FieldLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(FieldLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 79, Short.MAX_VALUE)
                                .addComponent(ButtonConvertir)))))
                .addGap(49, 49, 49))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(ComboBoxConversores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Label1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FieldLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(80, 80, 80)
                        .addComponent(ButtonConvertir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Label2)
                    .addComponent(FieldLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonConvertirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonConvertirActionPerformed
        AplicarConversion();
    }//GEN-LAST:event_ButtonConvertirActionPerformed

    public void AplicarConversion() throws HeadlessException {
        try {
            if(convertirAValor2) {
                var valor = FieldLabel1.getText().trim().replace(",", ".");
                Double valorDouble = Double.valueOf(valor);
                valorDouble = conversorSeleccionado.convertirValorUnoaValorDos(valorDouble);
                if (valorDouble  % 1 == 0)
                    FieldLabel2.setText(String.format("%.0f", valorDouble));
                else
                    FieldLabel2.setText(String.format("%.3f", valorDouble));
            }
            else{
                var valor = FieldLabel2.getText().trim().replace(",", ".");
                Double valorDouble = Double.valueOf(valor);
                valorDouble = conversorSeleccionado.convertirValoDosaValorUno(valorDouble);
                if (valorDouble  % 1 == 0)
                    FieldLabel1.setText(String.format("%.0f", valorDouble));
                else
                    FieldLabel1.setText(String.format("%.3f", valorDouble));
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this,"Ingrese un valor numerico"
                    ,"Error de Conversion",JOptionPane.ERROR_MESSAGE);
        }
    }

    private void FieldLabel1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FieldLabel1FocusLost
        convertirAValor2 = true;
    }//GEN-LAST:event_FieldLabel1FocusLost

    private void FieldLabel2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_FieldLabel2FocusLost
        convertirAValor2 = false;
    }//GEN-LAST:event_FieldLabel2FocusLost

    private void FieldLabel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FieldLabel1KeyPressed
        // Si apret√© enter
        if(evt.getKeyChar() == KeyEvent.VK_ENTER){
            convertirAValor2 = true;
            AplicarConversion();
        }
    }//GEN-LAST:event_FieldLabel1KeyPressed

    private void FieldLabel2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_FieldLabel2KeyPressed
   
        if(evt.getKeyChar() == KeyEvent.VK_ENTER){
            convertirAValor2 = false;
            AplicarConversion();
        }
    }//GEN-LAST:event_FieldLabel2KeyPressed

    private void ComboBoxConversoresItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxConversoresItemStateChanged
        int selectedItem = ComboBoxConversores.getSelectedIndex();
        conversorSeleccionado = conversores.get(selectedItem);
        Label1.setText(conversorSeleccionado.getLabel1());
        Label2.setText(conversorSeleccionado.getLabel2());
        FieldLabel1.setText("");
        FieldLabel2.setText("");
    }//GEN-LAST:event_ComboBoxConversoresItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConversorGenerico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConversorGenerico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConversorGenerico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConversorGenerico.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConversorGenerico().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonConvertir;
    private javax.swing.JComboBox<String> ComboBoxConversores;
    private javax.swing.JTextField FieldLabel1;
    private javax.swing.JTextField FieldLabel2;
    private javax.swing.JLabel Label1;
    private javax.swing.JLabel Label2;
    // End of variables declaration//GEN-END:variables
    private boolean convertirAValor2;
    private List<Conversor> conversores = new ArrayList<Conversor>();
    private Conversor conversorSeleccionado;
}

